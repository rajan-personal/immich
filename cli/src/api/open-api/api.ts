/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.91.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface APIKeyCreateDto
 */
export interface APIKeyCreateDto {
    /**
     * 
     * @type {string}
     * @memberof APIKeyCreateDto
     */
    'name'?: string;
}
/**
 * 
 * @export
 * @interface APIKeyCreateResponseDto
 */
export interface APIKeyCreateResponseDto {
    /**
     * 
     * @type {APIKeyResponseDto}
     * @memberof APIKeyCreateResponseDto
     */
    'apiKey': APIKeyResponseDto;
    /**
     * 
     * @type {string}
     * @memberof APIKeyCreateResponseDto
     */
    'secret': string;
}
/**
 * 
 * @export
 * @interface APIKeyResponseDto
 */
export interface APIKeyResponseDto {
    /**
     * 
     * @type {string}
     * @memberof APIKeyResponseDto
     */
    'createdAt': string;
    /**
     * 
     * @type {string}
     * @memberof APIKeyResponseDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof APIKeyResponseDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof APIKeyResponseDto
     */
    'updatedAt': string;
}
/**
 * 
 * @export
 * @interface APIKeyUpdateDto
 */
export interface APIKeyUpdateDto {
    /**
     * 
     * @type {string}
     * @memberof APIKeyUpdateDto
     */
    'name': string;
}
/**
 * 
 * @export
 * @interface ActivityCreateDto
 */
export interface ActivityCreateDto {
    /**
     * 
     * @type {string}
     * @memberof ActivityCreateDto
     */
    'albumId': string;
    /**
     * 
     * @type {string}
     * @memberof ActivityCreateDto
     */
    'assetId'?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityCreateDto
     */
    'comment'?: string;
    /**
     * 
     * @type {ReactionType}
     * @memberof ActivityCreateDto
     */
    'type': ReactionType;
}


/**
 * 
 * @export
 * @interface ActivityResponseDto
 */
export interface ActivityResponseDto {
    /**
     * 
     * @type {string}
     * @memberof ActivityResponseDto
     */
    'assetId': string | null;
    /**
     * 
     * @type {string}
     * @memberof ActivityResponseDto
     */
    'comment'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ActivityResponseDto
     */
    'createdAt': string;
    /**
     * 
     * @type {string}
     * @memberof ActivityResponseDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof ActivityResponseDto
     */
    'type': ActivityResponseDtoTypeEnum;
    /**
     * 
     * @type {UserDto}
     * @memberof ActivityResponseDto
     */
    'user': UserDto;
}

export const ActivityResponseDtoTypeEnum = {
    Comment: 'comment',
    Like: 'like'
} as const;

export type ActivityResponseDtoTypeEnum = typeof ActivityResponseDtoTypeEnum[keyof typeof ActivityResponseDtoTypeEnum];

/**
 * 
 * @export
 * @interface ActivityStatisticsResponseDto
 */
export interface ActivityStatisticsResponseDto {
    /**
     * 
     * @type {number}
     * @memberof ActivityStatisticsResponseDto
     */
    'comments': number;
}
/**
 * 
 * @export
 * @interface AddUsersDto
 */
export interface AddUsersDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof AddUsersDto
     */
    'sharedUserIds': Array<string>;
}
/**
 * 
 * @export
 * @interface AlbumCountResponseDto
 */
export interface AlbumCountResponseDto {
    /**
     * 
     * @type {number}
     * @memberof AlbumCountResponseDto
     */
    'notShared': number;
    /**
     * 
     * @type {number}
     * @memberof AlbumCountResponseDto
     */
    'owned': number;
    /**
     * 
     * @type {number}
     * @memberof AlbumCountResponseDto
     */
    'shared': number;
}
/**
 * 
 * @export
 * @interface AlbumResponseDto
 */
export interface AlbumResponseDto {
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'albumName': string;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'albumThumbnailAssetId': string | null;
    /**
     * 
     * @type {number}
     * @memberof AlbumResponseDto
     */
    'assetCount': number;
    /**
     * 
     * @type {Array<AssetResponseDto>}
     * @memberof AlbumResponseDto
     */
    'assets': Array<AssetResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'createdAt': string;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'description': string;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'endDate'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AlbumResponseDto
     */
    'hasSharedLink': boolean;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'id': string;
    /**
     * 
     * @type {boolean}
     * @memberof AlbumResponseDto
     */
    'isActivityEnabled': boolean;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'lastModifiedAssetTimestamp'?: string;
    /**
     * 
     * @type {UserResponseDto}
     * @memberof AlbumResponseDto
     */
    'owner': UserResponseDto;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'ownerId': string;
    /**
     * 
     * @type {boolean}
     * @memberof AlbumResponseDto
     */
    'shared': boolean;
    /**
     * 
     * @type {Array<UserResponseDto>}
     * @memberof AlbumResponseDto
     */
    'sharedUsers': Array<UserResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'startDate'?: string;
    /**
     * 
     * @type {string}
     * @memberof AlbumResponseDto
     */
    'updatedAt': string;
}
/**
 * 
 * @export
 * @interface AllJobStatusResponseDto
 */
export interface AllJobStatusResponseDto {
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'backgroundTask': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'library': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'metadataExtraction': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'migration': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'objectTagging': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'recognizeFaces': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'search': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'sidecar': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'smartSearch': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'storageTemplateMigration': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'thumbnailGeneration': JobStatusDto;
    /**
     * 
     * @type {JobStatusDto}
     * @memberof AllJobStatusResponseDto
     */
    'videoConversion': JobStatusDto;
}
/**
 * 
 * @export
 * @interface AssetBulkDeleteDto
 */
export interface AssetBulkDeleteDto {
    /**
     * 
     * @type {boolean}
     * @memberof AssetBulkDeleteDto
     */
    'force'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AssetBulkDeleteDto
     */
    'ids': Array<string>;
}
/**
 * 
 * @export
 * @interface AssetBulkUpdateDto
 */
export interface AssetBulkUpdateDto {
    /**
     * 
     * @type {string}
     * @memberof AssetBulkUpdateDto
     */
    'dateTimeOriginal'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AssetBulkUpdateDto
     */
    'ids': Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof AssetBulkUpdateDto
     */
    'isArchived'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AssetBulkUpdateDto
     */
    'isFavorite'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AssetBulkUpdateDto
     */
    'latitude'?: number;
    /**
     * 
     * @type {number}
     * @memberof AssetBulkUpdateDto
     */
    'longitude'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AssetBulkUpdateDto
     */
    'removeParent'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AssetBulkUpdateDto
     */
    'stackParentId'?: string;
}
/**
 * 
 * @export
 * @interface AssetBulkUploadCheckDto
 */
export interface AssetBulkUploadCheckDto {
    /**
     * 
     * @type {Array<AssetBulkUploadCheckItem>}
     * @memberof AssetBulkUploadCheckDto
     */
    'assets': Array<AssetBulkUploadCheckItem>;
}
/**
 * 
 * @export
 * @interface AssetBulkUploadCheckItem
 */
export interface AssetBulkUploadCheckItem {
    /**
     * base64 or hex encoded sha1 hash
     * @type {string}
     * @memberof AssetBulkUploadCheckItem
     */
    'checksum': string;
    /**
     * 
     * @type {string}
     * @memberof AssetBulkUploadCheckItem
     */
    'id': string;
}
/**
 * 
 * @export
 * @interface AssetBulkUploadCheckResponseDto
 */
export interface AssetBulkUploadCheckResponseDto {
    /**
     * 
     * @type {Array<AssetBulkUploadCheckResult>}
     * @memberof AssetBulkUploadCheckResponseDto
     */
    'results': Array<AssetBulkUploadCheckResult>;
}
/**
 * 
 * @export
 * @interface AssetBulkUploadCheckResult
 */
export interface AssetBulkUploadCheckResult {
    /**
     * 
     * @type {string}
     * @memberof AssetBulkUploadCheckResult
     */
    'action': AssetBulkUploadCheckResultActionEnum;
    /**
     * 
     * @type {string}
     * @memberof AssetBulkUploadCheckResult
     */
    'assetId'?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetBulkUploadCheckResult
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof AssetBulkUploadCheckResult
     */
    'reason'?: AssetBulkUploadCheckResultReasonEnum;
}

export const AssetBulkUploadCheckResultActionEnum = {
    Accept: 'accept',
    Reject: 'reject'
} as const;

export type AssetBulkUploadCheckResultActionEnum = typeof AssetBulkUploadCheckResultActionEnum[keyof typeof AssetBulkUploadCheckResultActionEnum];
export const AssetBulkUploadCheckResultReasonEnum = {
    Duplicate: 'duplicate',
    UnsupportedFormat: 'unsupported-format'
} as const;

export type AssetBulkUploadCheckResultReasonEnum = typeof AssetBulkUploadCheckResultReasonEnum[keyof typeof AssetBulkUploadCheckResultReasonEnum];

/**
 * 
 * @export
 * @interface AssetFaceResponseDto
 */
export interface AssetFaceResponseDto {
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    'boundingBoxX1': number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    'boundingBoxX2': number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    'boundingBoxY1': number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    'boundingBoxY2': number;
    /**
     * 
     * @type {string}
     * @memberof AssetFaceResponseDto
     */
    'id': string;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    'imageHeight': number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    'imageWidth': number;
    /**
     * 
     * @type {PersonResponseDto}
     * @memberof AssetFaceResponseDto
     */
    'person': PersonResponseDto | null;
}
/**
 * 
 * @export
 * @interface AssetFaceUpdateDto
 */
export interface AssetFaceUpdateDto {
    /**
     * 
     * @type {Array<AssetFaceUpdateItem>}
     * @memberof AssetFaceUpdateDto
     */
    'data': Array<AssetFaceUpdateItem>;
}
/**
 * 
 * @export
 * @interface AssetFaceUpdateItem
 */
export interface AssetFaceUpdateItem {
    /**
     * 
     * @type {string}
     * @memberof AssetFaceUpdateItem
     */
    'assetId': string;
    /**
     * 
     * @type {string}
     * @memberof AssetFaceUpdateItem
     */
    'personId': string;
}
/**
 * 
 * @export
 * @interface AssetFaceWithoutPersonResponseDto
 */
export interface AssetFaceWithoutPersonResponseDto {
    /**
     * 
     * @type {number}
     * @memberof AssetFaceWithoutPersonResponseDto
     */
    'boundingBoxX1': number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceWithoutPersonResponseDto
     */
    'boundingBoxX2': number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceWithoutPersonResponseDto
     */
    'boundingBoxY1': number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceWithoutPersonResponseDto
     */
    'boundingBoxY2': number;
    /**
     * 
     * @type {string}
     * @memberof AssetFaceWithoutPersonResponseDto
     */
    'id': string;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceWithoutPersonResponseDto
     */
    'imageHeight': number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceWithoutPersonResponseDto
     */
    'imageWidth': number;
}
/**
 * 
 * @export
 * @interface AssetFileUploadResponseDto
 */
export interface AssetFileUploadResponseDto {
    /**
     * 
     * @type {boolean}
     * @memberof AssetFileUploadResponseDto
     */
    'duplicate': boolean;
    /**
     * 
     * @type {string}
     * @memberof AssetFileUploadResponseDto
     */
    'id': string;
}
/**
 * 
 * @export
 * @interface AssetIdsDto
 */
export interface AssetIdsDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof AssetIdsDto
     */
    'assetIds': Array<string>;
}
/**
 * 
 * @export
 * @interface AssetIdsResponseDto
 */
export interface AssetIdsResponseDto {
    /**
     * 
     * @type {string}
     * @memberof AssetIdsResponseDto
     */
    'assetId': string;
    /**
     * 
     * @type {string}
     * @memberof AssetIdsResponseDto
     */
    'error'?: AssetIdsResponseDtoErrorEnum;
    /**
     * 
     * @type {boolean}
     * @memberof AssetIdsResponseDto
     */
    'success': boolean;
}

export const AssetIdsResponseDtoErrorEnum = {
    Duplicate: 'duplicate',
    NoPermission: 'no_permission',
    NotFound: 'not_found'
} as const;

export type AssetIdsResponseDtoErrorEnum = typeof AssetIdsResponseDtoErrorEnum[keyof typeof AssetIdsResponseDtoErrorEnum];

/**
 * 
 * @export
 * @enum {string}
 */

export const AssetJobName = {
    RegenerateThumbnail: 'regenerate-thumbnail',
    RefreshMetadata: 'refresh-metadata',
    TranscodeVideo: 'transcode-video'
} as const;

export type AssetJobName = typeof AssetJobName[keyof typeof AssetJobName];


/**
 * 
 * @export
 * @interface AssetJobsDto
 */
export interface AssetJobsDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof AssetJobsDto
     */
    'assetIds': Array<string>;
    /**
     * 
     * @type {AssetJobName}
     * @memberof AssetJobsDto
     */
    'name': AssetJobName;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const AssetOrder = {
    Asc: 'asc',
    Desc: 'desc'
} as const;

export type AssetOrder = typeof AssetOrder[keyof typeof AssetOrder];


/**
 * 
 * @export
 * @interface AssetResponseDto
 */
export interface AssetResponseDto {
    /**
     * base64 encoded sha1 hash
     * @type {string}
     * @memberof AssetResponseDto
     */
    'checksum': string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'deviceAssetId': string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'deviceId': string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'duration': string;
    /**
     * 
     * @type {ExifResponseDto}
     * @memberof AssetResponseDto
     */
    'exifInfo'?: ExifResponseDto;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'fileCreatedAt': string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'fileModifiedAt': string;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    'hasMetadata': boolean;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'id': string;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    'isArchived': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    'isExternal': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    'isFavorite': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    'isOffline': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    'isReadOnly': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    'isTrashed': boolean;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'libraryId': string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'livePhotoVideoId'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'localDateTime': string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'originalFileName': string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'originalPath': string;
    /**
     * 
     * @type {UserResponseDto}
     * @memberof AssetResponseDto
     */
    'owner'?: UserResponseDto;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'ownerId': string;
    /**
     * 
     * @type {Array<PersonWithFacesResponseDto>}
     * @memberof AssetResponseDto
     */
    'people'?: Array<PersonWithFacesResponseDto>;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    'resized': boolean;
    /**
     * 
     * @type {SmartInfoResponseDto}
     * @memberof AssetResponseDto
     */
    'smartInfo'?: SmartInfoResponseDto;
    /**
     * 
     * @type {Array<AssetResponseDto>}
     * @memberof AssetResponseDto
     */
    'stack'?: Array<AssetResponseDto>;
    /**
     * 
     * @type {number}
     * @memberof AssetResponseDto
     */
    'stackCount': number | null;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'stackParentId'?: string | null;
    /**
     * 
     * @type {Array<TagResponseDto>}
     * @memberof AssetResponseDto
     */
    'tags'?: Array<TagResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'thumbhash': string | null;
    /**
     * 
     * @type {AssetTypeEnum}
     * @memberof AssetResponseDto
     */
    'type': AssetTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    'updatedAt': string;
}


/**
 * 
 * @export
 * @interface AssetStatsResponseDto
 */
export interface AssetStatsResponseDto {
    /**
     * 
     * @type {number}
     * @memberof AssetStatsResponseDto
     */
    'images': number;
    /**
     * 
     * @type {number}
     * @memberof AssetStatsResponseDto
     */
    'total': number;
    /**
     * 
     * @type {number}
     * @memberof AssetStatsResponseDto
     */
    'videos': number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const AssetTypeEnum = {
    Image: 'IMAGE',
    Video: 'VIDEO',
    Audio: 'AUDIO',
    Other: 'OTHER'
} as const;

export type AssetTypeEnum = typeof AssetTypeEnum[keyof typeof AssetTypeEnum];


/**
 * 
 * @export
 * @enum {string}
 */

export const AudioCodec = {
    Mp3: 'mp3',
    Aac: 'aac',
    Libopus: 'libopus'
} as const;

export type AudioCodec = typeof AudioCodec[keyof typeof AudioCodec];


/**
 * 
 * @export
 * @interface AuditDeletesResponseDto
 */
export interface AuditDeletesResponseDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof AuditDeletesResponseDto
     */
    'ids': Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof AuditDeletesResponseDto
     */
    'needsFullSync': boolean;
}
/**
 * 
 * @export
 * @interface AuthDeviceResponseDto
 */
export interface AuthDeviceResponseDto {
    /**
     * 
     * @type {string}
     * @memberof AuthDeviceResponseDto
     */
    'createdAt': string;
    /**
     * 
     * @type {boolean}
     * @memberof AuthDeviceResponseDto
     */
    'current': boolean;
    /**
     * 
     * @type {string}
     * @memberof AuthDeviceResponseDto
     */
    'deviceOS': string;
    /**
     * 
     * @type {string}
     * @memberof AuthDeviceResponseDto
     */
    'deviceType': string;
    /**
     * 
     * @type {string}
     * @memberof AuthDeviceResponseDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof AuthDeviceResponseDto
     */
    'updatedAt': string;
}
/**
 * 
 * @export
 * @interface BulkIdResponseDto
 */
export interface BulkIdResponseDto {
    /**
     * 
     * @type {string}
     * @memberof BulkIdResponseDto
     */
    'error'?: BulkIdResponseDtoErrorEnum;
    /**
     * 
     * @type {string}
     * @memberof BulkIdResponseDto
     */
    'id': string;
    /**
     * 
     * @type {boolean}
     * @memberof BulkIdResponseDto
     */
    'success': boolean;
}

export const BulkIdResponseDtoErrorEnum = {
    Duplicate: 'duplicate',
    NoPermission: 'no_permission',
    NotFound: 'not_found',
    Unknown: 'unknown'
} as const;

export type BulkIdResponseDtoErrorEnum = typeof BulkIdResponseDtoErrorEnum[keyof typeof BulkIdResponseDtoErrorEnum];

/**
 * 
 * @export
 * @interface BulkIdsDto
 */
export interface BulkIdsDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof BulkIdsDto
     */
    'ids': Array<string>;
}
/**
 * 
 * @export
 * @interface CLIPConfig
 */
export interface CLIPConfig {
    /**
     * 
     * @type {boolean}
     * @memberof CLIPConfig
     */
    'enabled': boolean;
    /**
     * 
     * @type {CLIPMode}
     * @memberof CLIPConfig
     */
    'mode'?: CLIPMode;
    /**
     * 
     * @type {string}
     * @memberof CLIPConfig
     */
    'modelName': string;
    /**
     * 
     * @type {ModelType}
     * @memberof CLIPConfig
     */
    'modelType'?: ModelType;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const CLIPMode = {
    Vision: 'vision',
    Text: 'text'
} as const;

export type CLIPMode = typeof CLIPMode[keyof typeof CLIPMode];


/**
 * 
 * @export
 * @enum {string}
 */

export const CQMode = {
    Auto: 'auto',
    Cqp: 'cqp',
    Icq: 'icq'
} as const;

export type CQMode = typeof CQMode[keyof typeof CQMode];


/**
 * 
 * @export
 * @interface ChangePasswordDto
 */
export interface ChangePasswordDto {
    /**
     * 
     * @type {string}
     * @memberof ChangePasswordDto
     */
    'newPassword': string;
    /**
     * 
     * @type {string}
     * @memberof ChangePasswordDto
     */
    'password': string;
}
/**
 * 
 * @export
 * @interface CheckExistingAssetsDto
 */
export interface CheckExistingAssetsDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof CheckExistingAssetsDto
     */
    'deviceAssetIds': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CheckExistingAssetsDto
     */
    'deviceId': string;
}
/**
 * 
 * @export
 * @interface CheckExistingAssetsResponseDto
 */
export interface CheckExistingAssetsResponseDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof CheckExistingAssetsResponseDto
     */
    'existingIds': Array<string>;
}
/**
 * 
 * @export
 * @interface ClassificationConfig
 */
export interface ClassificationConfig {
    /**
     * 
     * @type {boolean}
     * @memberof ClassificationConfig
     */
    'enabled': boolean;
    /**
     * 
     * @type {number}
     * @memberof ClassificationConfig
     */
    'minScore': number;
    /**
     * 
     * @type {string}
     * @memberof ClassificationConfig
     */
    'modelName': string;
    /**
     * 
     * @type {ModelType}
     * @memberof ClassificationConfig
     */
    'modelType'?: ModelType;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const Colorspace = {
    Srgb: 'srgb',
    P3: 'p3'
} as const;

export type Colorspace = typeof Colorspace[keyof typeof Colorspace];


/**
 * 
 * @export
 * @interface CreateAlbumDto
 */
export interface CreateAlbumDto {
    /**
     * 
     * @type {string}
     * @memberof CreateAlbumDto
     */
    'albumName': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateAlbumDto
     */
    'assetIds'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreateAlbumDto
     */
    'description'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateAlbumDto
     */
    'sharedWithUserIds'?: Array<string>;
}
/**
 * 
 * @export
 * @interface CreateLibraryDto
 */
export interface CreateLibraryDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateLibraryDto
     */
    'exclusionPatterns'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateLibraryDto
     */
    'importPaths'?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof CreateLibraryDto
     */
    'isVisible'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CreateLibraryDto
     */
    'name'?: string;
    /**
     * 
     * @type {LibraryType}
     * @memberof CreateLibraryDto
     */
    'type': LibraryType;
}


/**
 * 
 * @export
 * @interface CreateProfileImageResponseDto
 */
export interface CreateProfileImageResponseDto {
    /**
     * 
     * @type {string}
     * @memberof CreateProfileImageResponseDto
     */
    'profileImagePath': string;
    /**
     * 
     * @type {string}
     * @memberof CreateProfileImageResponseDto
     */
    'userId': string;
}
/**
 * 
 * @export
 * @interface CreateTagDto
 */
export interface CreateTagDto {
    /**
     * 
     * @type {string}
     * @memberof CreateTagDto
     */
    'name': string;
    /**
     * 
     * @type {TagTypeEnum}
     * @memberof CreateTagDto
     */
    'type': TagTypeEnum;
}


/**
 * 
 * @export
 * @interface CreateUserDto
 */
export interface CreateUserDto {
    /**
     * 
     * @type {string}
     * @memberof CreateUserDto
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserDto
     */
    'externalPath'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreateUserDto
     */
    'memoriesEnabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CreateUserDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserDto
     */
    'password': string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserDto
     */
    'storageLabel'?: string | null;
}
/**
 * 
 * @export
 * @interface CuratedLocationsResponseDto
 */
export interface CuratedLocationsResponseDto {
    /**
     * 
     * @type {string}
     * @memberof CuratedLocationsResponseDto
     */
    'city': string;
    /**
     * 
     * @type {string}
     * @memberof CuratedLocationsResponseDto
     */
    'deviceAssetId': string;
    /**
     * 
     * @type {string}
     * @memberof CuratedLocationsResponseDto
     */
    'deviceId': string;
    /**
     * 
     * @type {string}
     * @memberof CuratedLocationsResponseDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof CuratedLocationsResponseDto
     */
    'resizePath': string;
}
/**
 * 
 * @export
 * @interface CuratedObjectsResponseDto
 */
export interface CuratedObjectsResponseDto {
    /**
     * 
     * @type {string}
     * @memberof CuratedObjectsResponseDto
     */
    'deviceAssetId': string;
    /**
     * 
     * @type {string}
     * @memberof CuratedObjectsResponseDto
     */
    'deviceId': string;
    /**
     * 
     * @type {string}
     * @memberof CuratedObjectsResponseDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof CuratedObjectsResponseDto
     */
    'object': string;
    /**
     * 
     * @type {string}
     * @memberof CuratedObjectsResponseDto
     */
    'resizePath': string;
}
/**
 * 
 * @export
 * @interface DownloadArchiveInfo
 */
export interface DownloadArchiveInfo {
    /**
     * 
     * @type {Array<string>}
     * @memberof DownloadArchiveInfo
     */
    'assetIds': Array<string>;
    /**
     * 
     * @type {number}
     * @memberof DownloadArchiveInfo
     */
    'size': number;
}
/**
 * 
 * @export
 * @interface DownloadInfoDto
 */
export interface DownloadInfoDto {
    /**
     * 
     * @type {string}
     * @memberof DownloadInfoDto
     */
    'albumId'?: string;
    /**
     * 
     * @type {number}
     * @memberof DownloadInfoDto
     */
    'archiveSize'?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof DownloadInfoDto
     */
    'assetIds'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DownloadInfoDto
     */
    'userId'?: string;
}
/**
 * 
 * @export
 * @interface DownloadResponseDto
 */
export interface DownloadResponseDto {
    /**
     * 
     * @type {Array<DownloadArchiveInfo>}
     * @memberof DownloadResponseDto
     */
    'archives': Array<DownloadArchiveInfo>;
    /**
     * 
     * @type {number}
     * @memberof DownloadResponseDto
     */
    'totalSize': number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const EntityType = {
    Asset: 'ASSET',
    Album: 'ALBUM'
} as const;

export type EntityType = typeof EntityType[keyof typeof EntityType];


/**
 * 
 * @export
 * @interface ExifResponseDto
 */
export interface ExifResponseDto {
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'city'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'country'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'dateTimeOriginal'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'description'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ExifResponseDto
     */
    'exifImageHeight'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ExifResponseDto
     */
    'exifImageWidth'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'exposureTime'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ExifResponseDto
     */
    'fNumber'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ExifResponseDto
     */
    'fileSizeInByte'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ExifResponseDto
     */
    'focalLength'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ExifResponseDto
     */
    'iso'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ExifResponseDto
     */
    'latitude'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'lensModel'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ExifResponseDto
     */
    'longitude'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'make'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'model'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'modifyDate'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'orientation'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'projectionType'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'state'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExifResponseDto
     */
    'timeZone'?: string | null;
}
/**
 * 
 * @export
 * @interface FaceDto
 */
export interface FaceDto {
    /**
     * 
     * @type {string}
     * @memberof FaceDto
     */
    'id': string;
}
/**
 * 
 * @export
 * @interface FileChecksumDto
 */
export interface FileChecksumDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof FileChecksumDto
     */
    'filenames': Array<string>;
}
/**
 * 
 * @export
 * @interface FileChecksumResponseDto
 */
export interface FileChecksumResponseDto {
    /**
     * 
     * @type {string}
     * @memberof FileChecksumResponseDto
     */
    'checksum': string;
    /**
     * 
     * @type {string}
     * @memberof FileChecksumResponseDto
     */
    'filename': string;
}
/**
 * 
 * @export
 * @interface FileReportDto
 */
export interface FileReportDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof FileReportDto
     */
    'extras': Array<string>;
    /**
     * 
     * @type {Array<FileReportItemDto>}
     * @memberof FileReportDto
     */
    'orphans': Array<FileReportItemDto>;
}
/**
 * 
 * @export
 * @interface FileReportFixDto
 */
export interface FileReportFixDto {
    /**
     * 
     * @type {Array<FileReportItemDto>}
     * @memberof FileReportFixDto
     */
    'items': Array<FileReportItemDto>;
}
/**
 * 
 * @export
 * @interface FileReportItemDto
 */
export interface FileReportItemDto {
    /**
     * 
     * @type {string}
     * @memberof FileReportItemDto
     */
    'checksum'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileReportItemDto
     */
    'entityId': string;
    /**
     * 
     * @type {PathEntityType}
     * @memberof FileReportItemDto
     */
    'entityType': PathEntityType;
    /**
     * 
     * @type {PathType}
     * @memberof FileReportItemDto
     */
    'pathType': PathType;
    /**
     * 
     * @type {string}
     * @memberof FileReportItemDto
     */
    'pathValue': string;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const JobCommand = {
    Start: 'start',
    Pause: 'pause',
    Resume: 'resume',
    Empty: 'empty',
    ClearFailed: 'clear-failed'
} as const;

export type JobCommand = typeof JobCommand[keyof typeof JobCommand];


/**
 * 
 * @export
 * @interface JobCommandDto
 */
export interface JobCommandDto {
    /**
     * 
     * @type {JobCommand}
     * @memberof JobCommandDto
     */
    'command': JobCommand;
    /**
     * 
     * @type {boolean}
     * @memberof JobCommandDto
     */
    'force': boolean;
}


/**
 * 
 * @export
 * @interface JobCountsDto
 */
export interface JobCountsDto {
    /**
     * 
     * @type {number}
     * @memberof JobCountsDto
     */
    'active': number;
    /**
     * 
     * @type {number}
     * @memberof JobCountsDto
     */
    'completed': number;
    /**
     * 
     * @type {number}
     * @memberof JobCountsDto
     */
    'delayed': number;
    /**
     * 
     * @type {number}
     * @memberof JobCountsDto
     */
    'failed': number;
    /**
     * 
     * @type {number}
     * @memberof JobCountsDto
     */
    'paused': number;
    /**
     * 
     * @type {number}
     * @memberof JobCountsDto
     */
    'waiting': number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const JobName = {
    ThumbnailGeneration: 'thumbnailGeneration',
    MetadataExtraction: 'metadataExtraction',
    VideoConversion: 'videoConversion',
    ObjectTagging: 'objectTagging',
    RecognizeFaces: 'recognizeFaces',
    SmartSearch: 'smartSearch',
    BackgroundTask: 'backgroundTask',
    StorageTemplateMigration: 'storageTemplateMigration',
    Migration: 'migration',
    Search: 'search',
    Sidecar: 'sidecar',
    Library: 'library'
} as const;

export type JobName = typeof JobName[keyof typeof JobName];


/**
 * 
 * @export
 * @interface JobSettingsDto
 */
export interface JobSettingsDto {
    /**
     * 
     * @type {number}
     * @memberof JobSettingsDto
     */
    'concurrency': number;
}
/**
 * 
 * @export
 * @interface JobStatusDto
 */
export interface JobStatusDto {
    /**
     * 
     * @type {JobCountsDto}
     * @memberof JobStatusDto
     */
    'jobCounts': JobCountsDto;
    /**
     * 
     * @type {QueueStatusDto}
     * @memberof JobStatusDto
     */
    'queueStatus': QueueStatusDto;
}
/**
 * 
 * @export
 * @interface LibraryResponseDto
 */
export interface LibraryResponseDto {
    /**
     * 
     * @type {number}
     * @memberof LibraryResponseDto
     */
    'assetCount': number;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    'createdAt': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryResponseDto
     */
    'exclusionPatterns': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    'id': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryResponseDto
     */
    'importPaths': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    'ownerId': string;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    'refreshedAt': string | null;
    /**
     * 
     * @type {LibraryType}
     * @memberof LibraryResponseDto
     */
    'type': LibraryType;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    'updatedAt': string;
}


/**
 * 
 * @export
 * @interface LibraryStatsResponseDto
 */
export interface LibraryStatsResponseDto {
    /**
     * 
     * @type {number}
     * @memberof LibraryStatsResponseDto
     */
    'photos': number;
    /**
     * 
     * @type {number}
     * @memberof LibraryStatsResponseDto
     */
    'total': number;
    /**
     * 
     * @type {number}
     * @memberof LibraryStatsResponseDto
     */
    'usage': number;
    /**
     * 
     * @type {number}
     * @memberof LibraryStatsResponseDto
     */
    'videos': number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const LibraryType = {
    Upload: 'UPLOAD',
    External: 'EXTERNAL'
} as const;

export type LibraryType = typeof LibraryType[keyof typeof LibraryType];


/**
 * 
 * @export
 * @enum {string}
 */

export const LogLevel = {
    Verbose: 'verbose',
    Debug: 'debug',
    Log: 'log',
    Warn: 'warn',
    Error: 'error',
    Fatal: 'fatal'
} as const;

export type LogLevel = typeof LogLevel[keyof typeof LogLevel];


/**
 * 
 * @export
 * @interface LoginCredentialDto
 */
export interface LoginCredentialDto {
    /**
     * 
     * @type {string}
     * @memberof LoginCredentialDto
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof LoginCredentialDto
     */
    'password': string;
}
/**
 * 
 * @export
 * @interface LoginResponseDto
 */
export interface LoginResponseDto {
    /**
     * 
     * @type {string}
     * @memberof LoginResponseDto
     */
    'accessToken': string;
    /**
     * 
     * @type {boolean}
     * @memberof LoginResponseDto
     */
    'isAdmin': boolean;
    /**
     * 
     * @type {string}
     * @memberof LoginResponseDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof LoginResponseDto
     */
    'profileImagePath': string;
    /**
     * 
     * @type {boolean}
     * @memberof LoginResponseDto
     */
    'shouldChangePassword': boolean;
    /**
     * 
     * @type {string}
     * @memberof LoginResponseDto
     */
    'userEmail': string;
    /**
     * 
     * @type {string}
     * @memberof LoginResponseDto
     */
    'userId': string;
}
/**
 * 
 * @export
 * @interface LogoutResponseDto
 */
export interface LogoutResponseDto {
    /**
     * 
     * @type {string}
     * @memberof LogoutResponseDto
     */
    'redirectUri': string;
    /**
     * 
     * @type {boolean}
     * @memberof LogoutResponseDto
     */
    'successful': boolean;
}
/**
 * 
 * @export
 * @interface MapMarkerResponseDto
 */
export interface MapMarkerResponseDto {
    /**
     * 
     * @type {string}
     * @memberof MapMarkerResponseDto
     */
    'id': string;
    /**
     * 
     * @type {number}
     * @memberof MapMarkerResponseDto
     */
    'lat': number;
    /**
     * 
     * @type {number}
     * @memberof MapMarkerResponseDto
     */
    'lon': number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const MapTheme = {
    Light: 'light',
    Dark: 'dark'
} as const;

export type MapTheme = typeof MapTheme[keyof typeof MapTheme];


/**
 * 
 * @export
 * @interface MemoryLaneResponseDto
 */
export interface MemoryLaneResponseDto {
    /**
     * 
     * @type {Array<AssetResponseDto>}
     * @memberof MemoryLaneResponseDto
     */
    'assets': Array<AssetResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof MemoryLaneResponseDto
     */
    'title': string;
}
/**
 * 
 * @export
 * @interface MergePersonDto
 */
export interface MergePersonDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof MergePersonDto
     */
    'ids': Array<string>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const ModelType = {
    ImageClassification: 'image-classification',
    FacialRecognition: 'facial-recognition',
    Clip: 'clip'
} as const;

export type ModelType = typeof ModelType[keyof typeof ModelType];


/**
 * 
 * @export
 * @interface OAuthAuthorizeResponseDto
 */
export interface OAuthAuthorizeResponseDto {
    /**
     * 
     * @type {string}
     * @memberof OAuthAuthorizeResponseDto
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface OAuthCallbackDto
 */
export interface OAuthCallbackDto {
    /**
     * 
     * @type {string}
     * @memberof OAuthCallbackDto
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface OAuthConfigDto
 */
export interface OAuthConfigDto {
    /**
     * 
     * @type {string}
     * @memberof OAuthConfigDto
     */
    'redirectUri': string;
}
/**
 * 
 * @export
 * @interface OAuthConfigResponseDto
 */
export interface OAuthConfigResponseDto {
    /**
     * 
     * @type {boolean}
     * @memberof OAuthConfigResponseDto
     */
    'autoLaunch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OAuthConfigResponseDto
     */
    'buttonText'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OAuthConfigResponseDto
     */
    'enabled': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OAuthConfigResponseDto
     */
    'passwordLoginEnabled': boolean;
    /**
     * 
     * @type {string}
     * @memberof OAuthConfigResponseDto
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface PartnerResponseDto
 */
export interface PartnerResponseDto {
    /**
     * 
     * @type {UserAvatarColor}
     * @memberof PartnerResponseDto
     */
    'avatarColor': UserAvatarColor;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'createdAt': string;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'deletedAt': string | null;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'externalPath': string | null;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'id': string;
    /**
     * 
     * @type {boolean}
     * @memberof PartnerResponseDto
     */
    'inTimeline'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PartnerResponseDto
     */
    'isAdmin': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PartnerResponseDto
     */
    'memoriesEnabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'oauthId': string;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'profileImagePath': string;
    /**
     * 
     * @type {boolean}
     * @memberof PartnerResponseDto
     */
    'shouldChangePassword': boolean;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'storageLabel': string | null;
    /**
     * 
     * @type {string}
     * @memberof PartnerResponseDto
     */
    'updatedAt': string;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const PathEntityType = {
    Asset: 'asset',
    Person: 'person',
    User: 'user'
} as const;

export type PathEntityType = typeof PathEntityType[keyof typeof PathEntityType];


/**
 * 
 * @export
 * @enum {string}
 */

export const PathType = {
    Original: 'original',
    JpegThumbnail: 'jpeg_thumbnail',
    WebpThumbnail: 'webp_thumbnail',
    EncodedVideo: 'encoded_video',
    Sidecar: 'sidecar',
    Face: 'face',
    Profile: 'profile'
} as const;

export type PathType = typeof PathType[keyof typeof PathType];


/**
 * 
 * @export
 * @interface PeopleResponseDto
 */
export interface PeopleResponseDto {
    /**
     * 
     * @type {Array<PersonResponseDto>}
     * @memberof PeopleResponseDto
     */
    'people': Array<PersonResponseDto>;
    /**
     * 
     * @type {number}
     * @memberof PeopleResponseDto
     */
    'total': number;
    /**
     * 
     * @type {number}
     * @memberof PeopleResponseDto
     */
    'visible': number;
}
/**
 * 
 * @export
 * @interface PeopleUpdateDto
 */
export interface PeopleUpdateDto {
    /**
     * 
     * @type {Array<PeopleUpdateItem>}
     * @memberof PeopleUpdateDto
     */
    'people': Array<PeopleUpdateItem>;
}
/**
 * 
 * @export
 * @interface PeopleUpdateItem
 */
export interface PeopleUpdateItem {
    /**
     * Person date of birth. Note: the mobile app cannot currently set the birth date to null.
     * @type {string}
     * @memberof PeopleUpdateItem
     */
    'birthDate'?: string | null;
    /**
     * Asset is used to get the feature face thumbnail.
     * @type {string}
     * @memberof PeopleUpdateItem
     */
    'featureFaceAssetId'?: string;
    /**
     * Person id.
     * @type {string}
     * @memberof PeopleUpdateItem
     */
    'id': string;
    /**
     * Person visibility
     * @type {boolean}
     * @memberof PeopleUpdateItem
     */
    'isHidden'?: boolean;
    /**
     * Person name.
     * @type {string}
     * @memberof PeopleUpdateItem
     */
    'name'?: string;
}
/**
 * 
 * @export
 * @interface PersonResponseDto
 */
export interface PersonResponseDto {
    /**
     * 
     * @type {string}
     * @memberof PersonResponseDto
     */
    'birthDate': string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseDto
     */
    'id': string;
    /**
     * 
     * @type {boolean}
     * @memberof PersonResponseDto
     */
    'isHidden': boolean;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseDto
     */
    'thumbnailPath': string;
}
/**
 * 
 * @export
 * @interface PersonStatisticsResponseDto
 */
export interface PersonStatisticsResponseDto {
    /**
     * 
     * @type {number}
     * @memberof PersonStatisticsResponseDto
     */
    'assets': number;
}
/**
 * 
 * @export
 * @interface PersonUpdateDto
 */
export interface PersonUpdateDto {
    /**
     * Person date of birth. Note: the mobile app cannot currently set the birth date to null.
     * @type {string}
     * @memberof PersonUpdateDto
     */
    'birthDate'?: string | null;
    /**
     * Asset is used to get the feature face thumbnail.
     * @type {string}
     * @memberof PersonUpdateDto
     */
    'featureFaceAssetId'?: string;
    /**
     * Person visibility
     * @type {boolean}
     * @memberof PersonUpdateDto
     */
    'isHidden'?: boolean;
    /**
     * Person name.
     * @type {string}
     * @memberof PersonUpdateDto
     */
    'name'?: string;
}
/**
 * 
 * @export
 * @interface PersonWithFacesResponseDto
 */
export interface PersonWithFacesResponseDto {
    /**
     * 
     * @type {string}
     * @memberof PersonWithFacesResponseDto
     */
    'birthDate': string | null;
    /**
     * 
     * @type {Array<AssetFaceWithoutPersonResponseDto>}
     * @memberof PersonWithFacesResponseDto
     */
    'faces': Array<AssetFaceWithoutPersonResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof PersonWithFacesResponseDto
     */
    'id': string;
    /**
     * 
     * @type {boolean}
     * @memberof PersonWithFacesResponseDto
     */
    'isHidden': boolean;
    /**
     * 
     * @type {string}
     * @memberof PersonWithFacesResponseDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof PersonWithFacesResponseDto
     */
    'thumbnailPath': string;
}
/**
 * 
 * @export
 * @interface QueueStatusDto
 */
export interface QueueStatusDto {
    /**
     * 
     * @type {boolean}
     * @memberof QueueStatusDto
     */
    'isActive': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof QueueStatusDto
     */
    'isPaused': boolean;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const ReactionLevel = {
    Album: 'album',
    Asset: 'asset'
} as const;

export type ReactionLevel = typeof ReactionLevel[keyof typeof ReactionLevel];


/**
 * 
 * @export
 * @enum {string}
 */

export const ReactionType = {
    Comment: 'comment',
    Like: 'like'
} as const;

export type ReactionType = typeof ReactionType[keyof typeof ReactionType];


/**
 * 
 * @export
 * @interface RecognitionConfig
 */
export interface RecognitionConfig {
    /**
     * 
     * @type {boolean}
     * @memberof RecognitionConfig
     */
    'enabled': boolean;
    /**
     * 
     * @type {number}
     * @memberof RecognitionConfig
     */
    'maxDistance': number;
    /**
     * 
     * @type {number}
     * @memberof RecognitionConfig
     */
    'minFaces': number;
    /**
     * 
     * @type {number}
     * @memberof RecognitionConfig
     */
    'minScore': number;
    /**
     * 
     * @type {string}
     * @memberof RecognitionConfig
     */
    'modelName': string;
    /**
     * 
     * @type {ModelType}
     * @memberof RecognitionConfig
     */
    'modelType'?: ModelType;
}


/**
 * 
 * @export
 * @interface ScanLibraryDto
 */
export interface ScanLibraryDto {
    /**
     * 
     * @type {boolean}
     * @memberof ScanLibraryDto
     */
    'refreshAllFiles'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScanLibraryDto
     */
    'refreshModifiedFiles'?: boolean;
}
/**
 * 
 * @export
 * @interface SearchAlbumResponseDto
 */
export interface SearchAlbumResponseDto {
    /**
     * 
     * @type {number}
     * @memberof SearchAlbumResponseDto
     */
    'count': number;
    /**
     * 
     * @type {Array<SearchFacetResponseDto>}
     * @memberof SearchAlbumResponseDto
     */
    'facets': Array<SearchFacetResponseDto>;
    /**
     * 
     * @type {Array<AlbumResponseDto>}
     * @memberof SearchAlbumResponseDto
     */
    'items': Array<AlbumResponseDto>;
    /**
     * 
     * @type {number}
     * @memberof SearchAlbumResponseDto
     */
    'total': number;
}
/**
 * 
 * @export
 * @interface SearchAssetResponseDto
 */
export interface SearchAssetResponseDto {
    /**
     * 
     * @type {number}
     * @memberof SearchAssetResponseDto
     */
    'count': number;
    /**
     * 
     * @type {Array<SearchFacetResponseDto>}
     * @memberof SearchAssetResponseDto
     */
    'facets': Array<SearchFacetResponseDto>;
    /**
     * 
     * @type {Array<AssetResponseDto>}
     * @memberof SearchAssetResponseDto
     */
    'items': Array<AssetResponseDto>;
    /**
     * 
     * @type {number}
     * @memberof SearchAssetResponseDto
     */
    'total': number;
}
/**
 * 
 * @export
 * @interface SearchExploreItem
 */
export interface SearchExploreItem {
    /**
     * 
     * @type {AssetResponseDto}
     * @memberof SearchExploreItem
     */
    'data': AssetResponseDto;
    /**
     * 
     * @type {string}
     * @memberof SearchExploreItem
     */
    'value': string;
}
/**
 * 
 * @export
 * @interface SearchExploreResponseDto
 */
export interface SearchExploreResponseDto {
    /**
     * 
     * @type {string}
     * @memberof SearchExploreResponseDto
     */
    'fieldName': string;
    /**
     * 
     * @type {Array<SearchExploreItem>}
     * @memberof SearchExploreResponseDto
     */
    'items': Array<SearchExploreItem>;
}
/**
 * 
 * @export
 * @interface SearchFacetCountResponseDto
 */
export interface SearchFacetCountResponseDto {
    /**
     * 
     * @type {number}
     * @memberof SearchFacetCountResponseDto
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof SearchFacetCountResponseDto
     */
    'value': string;
}
/**
 * 
 * @export
 * @interface SearchFacetResponseDto
 */
export interface SearchFacetResponseDto {
    /**
     * 
     * @type {Array<SearchFacetCountResponseDto>}
     * @memberof SearchFacetResponseDto
     */
    'counts': Array<SearchFacetCountResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof SearchFacetResponseDto
     */
    'fieldName': string;
}
/**
 * 
 * @export
 * @interface SearchResponseDto
 */
export interface SearchResponseDto {
    /**
     * 
     * @type {SearchAlbumResponseDto}
     * @memberof SearchResponseDto
     */
    'albums': SearchAlbumResponseDto;
    /**
     * 
     * @type {SearchAssetResponseDto}
     * @memberof SearchResponseDto
     */
    'assets': SearchAssetResponseDto;
}
/**
 * 
 * @export
 * @interface ServerConfigDto
 */
export interface ServerConfigDto {
    /**
     * 
     * @type {boolean}
     * @memberof ServerConfigDto
     */
    'isInitialized': boolean;
    /**
     * 
     * @type {string}
     * @memberof ServerConfigDto
     */
    'loginPageMessage': string;
    /**
     * 
     * @type {string}
     * @memberof ServerConfigDto
     */
    'oauthButtonText': string;
    /**
     * 
     * @type {number}
     * @memberof ServerConfigDto
     */
    'trashDays': number;
}
/**
 * 
 * @export
 * @interface ServerFeaturesDto
 */
export interface ServerFeaturesDto {
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'clipEncode': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'configFile': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'facialRecognition': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'map': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'oauth': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'oauthAutoLaunch': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'passwordLogin': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'reverseGeocoding': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'search': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'sidecar': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'tagImage': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServerFeaturesDto
     */
    'trash': boolean;
}
/**
 * 
 * @export
 * @interface ServerInfoResponseDto
 */
export interface ServerInfoResponseDto {
    /**
     * 
     * @type {string}
     * @memberof ServerInfoResponseDto
     */
    'diskAvailable': string;
    /**
     * 
     * @type {number}
     * @memberof ServerInfoResponseDto
     */
    'diskAvailableRaw': number;
    /**
     * 
     * @type {string}
     * @memberof ServerInfoResponseDto
     */
    'diskSize': string;
    /**
     * 
     * @type {number}
     * @memberof ServerInfoResponseDto
     */
    'diskSizeRaw': number;
    /**
     * 
     * @type {number}
     * @memberof ServerInfoResponseDto
     */
    'diskUsagePercentage': number;
    /**
     * 
     * @type {string}
     * @memberof ServerInfoResponseDto
     */
    'diskUse': string;
    /**
     * 
     * @type {number}
     * @memberof ServerInfoResponseDto
     */
    'diskUseRaw': number;
}
/**
 * 
 * @export
 * @interface ServerMediaTypesResponseDto
 */
export interface ServerMediaTypesResponseDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof ServerMediaTypesResponseDto
     */
    'image': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ServerMediaTypesResponseDto
     */
    'sidecar': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ServerMediaTypesResponseDto
     */
    'video': Array<string>;
}
/**
 * 
 * @export
 * @interface ServerPingResponse
 */
export interface ServerPingResponse {
    /**
     * 
     * @type {string}
     * @memberof ServerPingResponse
     */
    'res': string;
}
/**
 * 
 * @export
 * @interface ServerStatsResponseDto
 */
export interface ServerStatsResponseDto {
    /**
     * 
     * @type {number}
     * @memberof ServerStatsResponseDto
     */
    'photos': number;
    /**
     * 
     * @type {number}
     * @memberof ServerStatsResponseDto
     */
    'usage': number;
    /**
     * 
     * @type {Array<UsageByUserDto>}
     * @memberof ServerStatsResponseDto
     */
    'usageByUser': Array<UsageByUserDto>;
    /**
     * 
     * @type {number}
     * @memberof ServerStatsResponseDto
     */
    'videos': number;
}
/**
 * 
 * @export
 * @interface ServerThemeDto
 */
export interface ServerThemeDto {
    /**
     * 
     * @type {string}
     * @memberof ServerThemeDto
     */
    'customCss': string;
}
/**
 * 
 * @export
 * @interface ServerVersionResponseDto
 */
export interface ServerVersionResponseDto {
    /**
     * 
     * @type {number}
     * @memberof ServerVersionResponseDto
     */
    'major': number;
    /**
     * 
     * @type {number}
     * @memberof ServerVersionResponseDto
     */
    'minor': number;
    /**
     * 
     * @type {number}
     * @memberof ServerVersionResponseDto
     */
    'patch': number;
}
/**
 * 
 * @export
 * @interface SharedLinkCreateDto
 */
export interface SharedLinkCreateDto {
    /**
     * 
     * @type {string}
     * @memberof SharedLinkCreateDto
     */
    'albumId'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkCreateDto
     */
    'allowDownload'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkCreateDto
     */
    'allowUpload'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof SharedLinkCreateDto
     */
    'assetIds'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkCreateDto
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkCreateDto
     */
    'expiresAt'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkCreateDto
     */
    'password'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkCreateDto
     */
    'showMetadata'?: boolean;
    /**
     * 
     * @type {SharedLinkType}
     * @memberof SharedLinkCreateDto
     */
    'type': SharedLinkType;
}


/**
 * 
 * @export
 * @interface SharedLinkEditDto
 */
export interface SharedLinkEditDto {
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkEditDto
     */
    'allowDownload'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkEditDto
     */
    'allowUpload'?: boolean;
    /**
     * Few clients cannot send null to set the expiryTime to never. Setting this flag and not sending expiryAt is considered as null instead. Clients that can send null values can ignore this.
     * @type {boolean}
     * @memberof SharedLinkEditDto
     */
    'changeExpiryTime'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkEditDto
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkEditDto
     */
    'expiresAt'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkEditDto
     */
    'password'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkEditDto
     */
    'showMetadata'?: boolean;
}
/**
 * 
 * @export
 * @interface SharedLinkResponseDto
 */
export interface SharedLinkResponseDto {
    /**
     * 
     * @type {AlbumResponseDto}
     * @memberof SharedLinkResponseDto
     */
    'album'?: AlbumResponseDto;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkResponseDto
     */
    'allowDownload': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkResponseDto
     */
    'allowUpload': boolean;
    /**
     * 
     * @type {Array<AssetResponseDto>}
     * @memberof SharedLinkResponseDto
     */
    'assets': Array<AssetResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    'createdAt': string;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    'expiresAt': string | null;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    'password': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkResponseDto
     */
    'showMetadata': boolean;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    'token'?: string | null;
    /**
     * 
     * @type {SharedLinkType}
     * @memberof SharedLinkResponseDto
     */
    'type': SharedLinkType;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    'userId': string;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const SharedLinkType = {
    Album: 'ALBUM',
    Individual: 'INDIVIDUAL'
} as const;

export type SharedLinkType = typeof SharedLinkType[keyof typeof SharedLinkType];


/**
 * 
 * @export
 * @interface SignUpDto
 */
export interface SignUpDto {
    /**
     * 
     * @type {string}
     * @memberof SignUpDto
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof SignUpDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof SignUpDto
     */
    'password': string;
}
/**
 * 
 * @export
 * @interface SmartInfoResponseDto
 */
export interface SmartInfoResponseDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof SmartInfoResponseDto
     */
    'objects'?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof SmartInfoResponseDto
     */
    'tags'?: Array<string> | null;
}
/**
 * 
 * @export
 * @interface SystemConfigDto
 */
export interface SystemConfigDto {
    /**
     * 
     * @type {SystemConfigFFmpegDto}
     * @memberof SystemConfigDto
     */
    'ffmpeg': SystemConfigFFmpegDto;
    /**
     * 
     * @type {SystemConfigJobDto}
     * @memberof SystemConfigDto
     */
    'job': SystemConfigJobDto;
    /**
     * 
     * @type {SystemConfigLibraryDto}
     * @memberof SystemConfigDto
     */
    'library': SystemConfigLibraryDto;
    /**
     * 
     * @type {SystemConfigLoggingDto}
     * @memberof SystemConfigDto
     */
    'logging': SystemConfigLoggingDto;
    /**
     * 
     * @type {SystemConfigMachineLearningDto}
     * @memberof SystemConfigDto
     */
    'machineLearning': SystemConfigMachineLearningDto;
    /**
     * 
     * @type {SystemConfigMapDto}
     * @memberof SystemConfigDto
     */
    'map': SystemConfigMapDto;
    /**
     * 
     * @type {SystemConfigNewVersionCheckDto}
     * @memberof SystemConfigDto
     */
    'newVersionCheck': SystemConfigNewVersionCheckDto;
    /**
     * 
     * @type {SystemConfigOAuthDto}
     * @memberof SystemConfigDto
     */
    'oauth': SystemConfigOAuthDto;
    /**
     * 
     * @type {SystemConfigPasswordLoginDto}
     * @memberof SystemConfigDto
     */
    'passwordLogin': SystemConfigPasswordLoginDto;
    /**
     * 
     * @type {SystemConfigReverseGeocodingDto}
     * @memberof SystemConfigDto
     */
    'reverseGeocoding': SystemConfigReverseGeocodingDto;
    /**
     * 
     * @type {SystemConfigStorageTemplateDto}
     * @memberof SystemConfigDto
     */
    'storageTemplate': SystemConfigStorageTemplateDto;
    /**
     * 
     * @type {SystemConfigThemeDto}
     * @memberof SystemConfigDto
     */
    'theme': SystemConfigThemeDto;
    /**
     * 
     * @type {SystemConfigThumbnailDto}
     * @memberof SystemConfigDto
     */
    'thumbnail': SystemConfigThumbnailDto;
    /**
     * 
     * @type {SystemConfigTrashDto}
     * @memberof SystemConfigDto
     */
    'trash': SystemConfigTrashDto;
}
/**
 * 
 * @export
 * @interface SystemConfigFFmpegDto
 */
export interface SystemConfigFFmpegDto {
    /**
     * 
     * @type {TranscodeHWAccel}
     * @memberof SystemConfigFFmpegDto
     */
    'accel': TranscodeHWAccel;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigFFmpegDto
     */
    'bframes': number;
    /**
     * 
     * @type {CQMode}
     * @memberof SystemConfigFFmpegDto
     */
    'cqMode': CQMode;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigFFmpegDto
     */
    'crf': number;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigFFmpegDto
     */
    'gopSize': number;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigFFmpegDto
     */
    'maxBitrate': string;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigFFmpegDto
     */
    'npl': number;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigFFmpegDto
     */
    'preset': string;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigFFmpegDto
     */
    'refs': number;
    /**
     * 
     * @type {AudioCodec}
     * @memberof SystemConfigFFmpegDto
     */
    'targetAudioCodec': AudioCodec;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigFFmpegDto
     */
    'targetResolution': string;
    /**
     * 
     * @type {VideoCodec}
     * @memberof SystemConfigFFmpegDto
     */
    'targetVideoCodec': VideoCodec;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigFFmpegDto
     */
    'temporalAQ': boolean;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigFFmpegDto
     */
    'threads': number;
    /**
     * 
     * @type {ToneMapping}
     * @memberof SystemConfigFFmpegDto
     */
    'tonemap': ToneMapping;
    /**
     * 
     * @type {TranscodePolicy}
     * @memberof SystemConfigFFmpegDto
     */
    'transcode': TranscodePolicy;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigFFmpegDto
     */
    'twoPass': boolean;
}


/**
 * 
 * @export
 * @interface SystemConfigJobDto
 */
export interface SystemConfigJobDto {
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'backgroundTask': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'library': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'metadataExtraction': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'migration': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'objectTagging': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'recognizeFaces': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'search': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'sidecar': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'smartSearch': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'storageTemplateMigration': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'thumbnailGeneration': JobSettingsDto;
    /**
     * 
     * @type {JobSettingsDto}
     * @memberof SystemConfigJobDto
     */
    'videoConversion': JobSettingsDto;
}
/**
 * 
 * @export
 * @interface SystemConfigLibraryDto
 */
export interface SystemConfigLibraryDto {
    /**
     * 
     * @type {SystemConfigLibraryScanDto}
     * @memberof SystemConfigLibraryDto
     */
    'scan': SystemConfigLibraryScanDto;
}
/**
 * 
 * @export
 * @interface SystemConfigLibraryScanDto
 */
export interface SystemConfigLibraryScanDto {
    /**
     * 
     * @type {string}
     * @memberof SystemConfigLibraryScanDto
     */
    'cronExpression': string;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigLibraryScanDto
     */
    'enabled': boolean;
}
/**
 * 
 * @export
 * @interface SystemConfigLoggingDto
 */
export interface SystemConfigLoggingDto {
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigLoggingDto
     */
    'enabled': boolean;
    /**
     * 
     * @type {LogLevel}
     * @memberof SystemConfigLoggingDto
     */
    'level': LogLevel;
}


/**
 * 
 * @export
 * @interface SystemConfigMachineLearningDto
 */
export interface SystemConfigMachineLearningDto {
    /**
     * 
     * @type {ClassificationConfig}
     * @memberof SystemConfigMachineLearningDto
     */
    'classification': ClassificationConfig;
    /**
     * 
     * @type {CLIPConfig}
     * @memberof SystemConfigMachineLearningDto
     */
    'clip': CLIPConfig;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigMachineLearningDto
     */
    'enabled': boolean;
    /**
     * 
     * @type {RecognitionConfig}
     * @memberof SystemConfigMachineLearningDto
     */
    'facialRecognition': RecognitionConfig;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigMachineLearningDto
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface SystemConfigMapDto
 */
export interface SystemConfigMapDto {
    /**
     * 
     * @type {string}
     * @memberof SystemConfigMapDto
     */
    'darkStyle': string;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigMapDto
     */
    'enabled': boolean;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigMapDto
     */
    'lightStyle': string;
}
/**
 * 
 * @export
 * @interface SystemConfigNewVersionCheckDto
 */
export interface SystemConfigNewVersionCheckDto {
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigNewVersionCheckDto
     */
    'enabled': boolean;
}
/**
 * 
 * @export
 * @interface SystemConfigOAuthDto
 */
export interface SystemConfigOAuthDto {
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigOAuthDto
     */
    'autoLaunch': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigOAuthDto
     */
    'autoRegister': boolean;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigOAuthDto
     */
    'buttonText': string;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigOAuthDto
     */
    'clientId': string;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigOAuthDto
     */
    'clientSecret': string;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigOAuthDto
     */
    'enabled': boolean;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigOAuthDto
     */
    'issuerUrl': string;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigOAuthDto
     */
    'mobileOverrideEnabled': boolean;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigOAuthDto
     */
    'mobileRedirectUri': string;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigOAuthDto
     */
    'scope': string;
    /**
     * 
     * @type {string}
     * @memberof SystemConfigOAuthDto
     */
    'storageLabelClaim': string;
}
/**
 * 
 * @export
 * @interface SystemConfigPasswordLoginDto
 */
export interface SystemConfigPasswordLoginDto {
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigPasswordLoginDto
     */
    'enabled': boolean;
}
/**
 * 
 * @export
 * @interface SystemConfigReverseGeocodingDto
 */
export interface SystemConfigReverseGeocodingDto {
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigReverseGeocodingDto
     */
    'enabled': boolean;
}
/**
 * 
 * @export
 * @interface SystemConfigStorageTemplateDto
 */
export interface SystemConfigStorageTemplateDto {
    /**
     * 
     * @type {string}
     * @memberof SystemConfigStorageTemplateDto
     */
    'template': string;
}
/**
 * 
 * @export
 * @interface SystemConfigTemplateStorageOptionDto
 */
export interface SystemConfigTemplateStorageOptionDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemConfigTemplateStorageOptionDto
     */
    'dayOptions': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemConfigTemplateStorageOptionDto
     */
    'hourOptions': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemConfigTemplateStorageOptionDto
     */
    'minuteOptions': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemConfigTemplateStorageOptionDto
     */
    'monthOptions': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemConfigTemplateStorageOptionDto
     */
    'presetOptions': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemConfigTemplateStorageOptionDto
     */
    'secondOptions': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemConfigTemplateStorageOptionDto
     */
    'weekOptions': Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemConfigTemplateStorageOptionDto
     */
    'yearOptions': Array<string>;
}
/**
 * 
 * @export
 * @interface SystemConfigThemeDto
 */
export interface SystemConfigThemeDto {
    /**
     * 
     * @type {string}
     * @memberof SystemConfigThemeDto
     */
    'customCss': string;
}
/**
 * 
 * @export
 * @interface SystemConfigThumbnailDto
 */
export interface SystemConfigThumbnailDto {
    /**
     * 
     * @type {Colorspace}
     * @memberof SystemConfigThumbnailDto
     */
    'colorspace': Colorspace;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigThumbnailDto
     */
    'jpegSize': number;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigThumbnailDto
     */
    'quality': number;
    /**
     * 
     * @type {number}
     * @memberof SystemConfigThumbnailDto
     */
    'webpSize': number;
}


/**
 * 
 * @export
 * @interface SystemConfigTrashDto
 */
export interface SystemConfigTrashDto {
    /**
     * 
     * @type {number}
     * @memberof SystemConfigTrashDto
     */
    'days': number;
    /**
     * 
     * @type {boolean}
     * @memberof SystemConfigTrashDto
     */
    'enabled': boolean;
}
/**
 * 
 * @export
 * @interface TagResponseDto
 */
export interface TagResponseDto {
    /**
     * 
     * @type {string}
     * @memberof TagResponseDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof TagResponseDto
     */
    'name': string;
    /**
     * 
     * @type {TagTypeEnum}
     * @memberof TagResponseDto
     */
    'type': TagTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TagResponseDto
     */
    'userId': string;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const TagTypeEnum = {
    Object: 'OBJECT',
    Face: 'FACE',
    Custom: 'CUSTOM'
} as const;

export type TagTypeEnum = typeof TagTypeEnum[keyof typeof TagTypeEnum];


/**
 * 
 * @export
 * @enum {string}
 */

export const ThumbnailFormat = {
    Jpeg: 'JPEG',
    Webp: 'WEBP'
} as const;

export type ThumbnailFormat = typeof ThumbnailFormat[keyof typeof ThumbnailFormat];


/**
 * 
 * @export
 * @interface TimeBucketResponseDto
 */
export interface TimeBucketResponseDto {
    /**
     * 
     * @type {number}
     * @memberof TimeBucketResponseDto
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof TimeBucketResponseDto
     */
    'timeBucket': string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const TimeBucketSize = {
    Day: 'DAY',
    Month: 'MONTH'
} as const;

export type TimeBucketSize = typeof TimeBucketSize[keyof typeof TimeBucketSize];


/**
 * 
 * @export
 * @enum {string}
 */

export const ToneMapping = {
    Hable: 'hable',
    Mobius: 'mobius',
    Reinhard: 'reinhard',
    Disabled: 'disabled'
} as const;

export type ToneMapping = typeof ToneMapping[keyof typeof ToneMapping];


/**
 * 
 * @export
 * @enum {string}
 */

export const TranscodeHWAccel = {
    Nvenc: 'nvenc',
    Qsv: 'qsv',
    Vaapi: 'vaapi',
    Rkmpp: 'rkmpp',
    Disabled: 'disabled'
} as const;

export type TranscodeHWAccel = typeof TranscodeHWAccel[keyof typeof TranscodeHWAccel];


/**
 * 
 * @export
 * @enum {string}
 */

export const TranscodePolicy = {
    All: 'all',
    Optimal: 'optimal',
    Required: 'required',
    Disabled: 'disabled'
} as const;

export type TranscodePolicy = typeof TranscodePolicy[keyof typeof TranscodePolicy];


/**
 * 
 * @export
 * @interface UpdateAlbumDto
 */
export interface UpdateAlbumDto {
    /**
     * 
     * @type {string}
     * @memberof UpdateAlbumDto
     */
    'albumName'?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateAlbumDto
     */
    'albumThumbnailAssetId'?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateAlbumDto
     */
    'description'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateAlbumDto
     */
    'isActivityEnabled'?: boolean;
}
/**
 * 
 * @export
 * @interface UpdateAssetDto
 */
export interface UpdateAssetDto {
    /**
     * 
     * @type {string}
     * @memberof UpdateAssetDto
     */
    'dateTimeOriginal'?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateAssetDto
     */
    'description'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateAssetDto
     */
    'isArchived'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateAssetDto
     */
    'isFavorite'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UpdateAssetDto
     */
    'latitude'?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateAssetDto
     */
    'longitude'?: number;
}
/**
 * 
 * @export
 * @interface UpdateLibraryDto
 */
export interface UpdateLibraryDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateLibraryDto
     */
    'exclusionPatterns'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateLibraryDto
     */
    'importPaths'?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateLibraryDto
     */
    'isVisible'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateLibraryDto
     */
    'name'?: string;
}
/**
 * 
 * @export
 * @interface UpdatePartnerDto
 */
export interface UpdatePartnerDto {
    /**
     * 
     * @type {boolean}
     * @memberof UpdatePartnerDto
     */
    'inTimeline': boolean;
}
/**
 * 
 * @export
 * @interface UpdateStackParentDto
 */
export interface UpdateStackParentDto {
    /**
     * 
     * @type {string}
     * @memberof UpdateStackParentDto
     */
    'newParentId': string;
    /**
     * 
     * @type {string}
     * @memberof UpdateStackParentDto
     */
    'oldParentId': string;
}
/**
 * 
 * @export
 * @interface UpdateTagDto
 */
export interface UpdateTagDto {
    /**
     * 
     * @type {string}
     * @memberof UpdateTagDto
     */
    'name'?: string;
}
/**
 * 
 * @export
 * @interface UpdateUserDto
 */
export interface UpdateUserDto {
    /**
     * 
     * @type {UserAvatarColor}
     * @memberof UpdateUserDto
     */
    'avatarColor'?: UserAvatarColor;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserDto
     */
    'email'?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserDto
     */
    'externalPath'?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserDto
     */
    'id': string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserDto
     */
    'isAdmin'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserDto
     */
    'memoriesEnabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserDto
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserDto
     */
    'password'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserDto
     */
    'shouldChangePassword'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserDto
     */
    'storageLabel'?: string;
}


/**
 * 
 * @export
 * @interface UsageByUserDto
 */
export interface UsageByUserDto {
    /**
     * 
     * @type {number}
     * @memberof UsageByUserDto
     */
    'photos': number;
    /**
     * 
     * @type {number}
     * @memberof UsageByUserDto
     */
    'usage': number;
    /**
     * 
     * @type {string}
     * @memberof UsageByUserDto
     */
    'userId': string;
    /**
     * 
     * @type {string}
     * @memberof UsageByUserDto
     */
    'userName': string;
    /**
     * 
     * @type {number}
     * @memberof UsageByUserDto
     */
    'videos': number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const UserAvatarColor = {
    Primary: 'primary',
    Pink: 'pink',
    Red: 'red',
    Yellow: 'yellow',
    Blue: 'blue',
    Green: 'green',
    Purple: 'purple',
    Orange: 'orange',
    Gray: 'gray',
    Amber: 'amber'
} as const;

export type UserAvatarColor = typeof UserAvatarColor[keyof typeof UserAvatarColor];


/**
 * 
 * @export
 * @interface UserDto
 */
export interface UserDto {
    /**
     * 
     * @type {UserAvatarColor}
     * @memberof UserDto
     */
    'avatarColor': UserAvatarColor;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    'profileImagePath': string;
}


/**
 * 
 * @export
 * @interface UserResponseDto
 */
export interface UserResponseDto {
    /**
     * 
     * @type {UserAvatarColor}
     * @memberof UserResponseDto
     */
    'avatarColor': UserAvatarColor;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'createdAt': string;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'deletedAt': string | null;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'externalPath': string | null;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'id': string;
    /**
     * 
     * @type {boolean}
     * @memberof UserResponseDto
     */
    'isAdmin': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserResponseDto
     */
    'memoriesEnabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'oauthId': string;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'profileImagePath': string;
    /**
     * 
     * @type {boolean}
     * @memberof UserResponseDto
     */
    'shouldChangePassword': boolean;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'storageLabel': string | null;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    'updatedAt': string;
}


/**
 * 
 * @export
 * @interface ValidateAccessTokenResponseDto
 */
export interface ValidateAccessTokenResponseDto {
    /**
     * 
     * @type {boolean}
     * @memberof ValidateAccessTokenResponseDto
     */
    'authStatus': boolean;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const VideoCodec = {
    H264: 'h264',
    Hevc: 'hevc',
    Vp9: 'vp9'
} as const;

export type VideoCodec = typeof VideoCodec[keyof typeof VideoCodec];







































